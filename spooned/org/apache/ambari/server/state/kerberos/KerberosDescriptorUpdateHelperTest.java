package org.apache.ambari.server.state.kerberos;
import com.google.inject.assistedinject.FactoryModuleBuilder;
import com.google.inject.persist.UnitOfWork;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import org.easymock.EasyMock;
import org.easymock.EasyMockSupport;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.crypto.password.StandardPasswordEncoder;
import static org.easymock.EasyMock.anyString;
import static org.easymock.EasyMock.expect;
@org.junit.experimental.categories.Category({ category.KerberosTest.class })
public class KerberosDescriptorUpdateHelperTest extends org.easymock.EasyMockSupport {
    private static final org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory KERBEROS_DESCRIPTOR_FACTORY = new org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory();

    private static final com.google.gson.Gson GSON = new com.google.gson.Gson();

    @org.junit.Test
    @org.junit.Ignore
    @org.apache.ambari.annotations.Experimental(feature = org.apache.ambari.annotations.ExperimentalFeature.MULTI_SERVICE, comment = "This was a very useful test that no longer works since all of the kerberos " + (("descriptor files for services are stored in stacks no longer shipped with Ambari. " + "Although we could checking a bunch of descriptors, perhaps this is better suited to ") + "something that is run when mpacks are registered."))
    public void updateDefaultUserKerberosDescriptor() throws java.lang.Exception {
        com.google.inject.Injector injector = com.google.inject.Guice.createInjector(new com.google.inject.AbstractModule() {
            @java.lang.Override
            protected void configure() {
                java.util.Properties properties = new java.util.Properties();
                properties.put("metadata.path", "src/main/resources/stacks");
                properties.put("common.services.path", "src/main/resources/common-services");
                properties.put("server.version.file", "target/version");
                properties.put("custom.action.definitions", "/tmp/nofile");
                properties.put("resources.dir", "src/main/resources");
                org.apache.ambari.server.configuration.Configuration configuration = new org.apache.ambari.server.configuration.Configuration(properties);
                org.apache.ambari.server.testutils.PartialNiceMockBinder.newBuilder(KerberosDescriptorUpdateHelperTest.this).addConfigsBindings().addFactoriesInstallBinding().build().configure(binder());
                install(new com.google.inject.assistedinject.FactoryModuleBuilder().build(org.apache.ambari.server.stack.StackManagerFactory.class));
                bind(org.apache.ambari.server.state.Clusters.class).toInstance(createNiceMock(org.apache.ambari.server.state.Clusters.class));
                bind(org.apache.ambari.server.orm.DBAccessor.class).toInstance(createNiceMock(org.apache.ambari.server.orm.DBAccessor.class));
                bind(javax.persistence.EntityManager.class).toInstance(createNiceMock(javax.persistence.EntityManager.class));
                bind(org.apache.ambari.server.state.stack.OsFamily.class).toInstance(createNiceMock(org.apache.ambari.server.state.stack.OsFamily.class));
                bind(org.apache.ambari.server.configuration.Configuration.class).toInstance(configuration);
                bind(org.apache.ambari.server.orm.dao.ExtensionLinkDAO.class).toInstance(createNiceMock(org.apache.ambari.server.orm.dao.ExtensionLinkDAO.class));
                bind(org.apache.ambari.server.topology.PersistedState.class).toInstance(createNiceMock(org.apache.ambari.server.topology.PersistedState.class));
                bind(org.apache.ambari.server.actionmanager.HostRoleCommandFactory.class).to(org.apache.ambari.server.actionmanager.HostRoleCommandFactoryImpl.class);
                bind(org.apache.ambari.server.actionmanager.ActionDBAccessor.class).to(org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.class);
                bind(com.google.inject.persist.UnitOfWork.class).toInstance(createNiceMock(com.google.inject.persist.UnitOfWork.class));
                bind(org.apache.ambari.server.metadata.RoleCommandOrderProvider.class).to(org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider.class);
                bind(org.apache.ambari.server.actionmanager.StageFactory.class).to(org.apache.ambari.server.actionmanager.StageFactoryImpl.class);
                bind(org.apache.ambari.server.audit.AuditLogger.class).toInstance(createNiceMock(org.apache.ambari.server.audit.AuditLoggerDefaultImpl.class));
                bind(org.springframework.security.crypto.password.PasswordEncoder.class).toInstance(new org.springframework.security.crypto.password.StandardPasswordEncoder());
                bind(org.apache.ambari.server.hooks.HookService.class).to(org.apache.ambari.server.hooks.users.UserHookService.class);
                bind(org.apache.ambari.server.state.ServiceComponentHostFactory.class).toInstance(createNiceMock(org.apache.ambari.server.state.ServiceComponentHostFactory.class));
                bind(org.apache.ambari.server.controller.AbstractRootServiceResponseFactory.class).to(org.apache.ambari.server.controller.RootServiceResponseFactory.class);
                bind(org.apache.ambari.server.security.encryption.CredentialStoreService.class).toInstance(createNiceMock(org.apache.ambari.server.security.encryption.CredentialStoreService.class));
                bind(org.apache.ambari.server.controller.AmbariManagementController.class).toInstance(createNiceMock(org.apache.ambari.server.controller.AmbariManagementController.class));
                bind(org.apache.ambari.server.scheduler.ExecutionScheduler.class).to(org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.class);
                bind(org.apache.ambari.server.controller.KerberosHelper.class).toInstance(createNiceMock(org.apache.ambari.server.controller.KerberosHelper.class));
            }
        });
        org.apache.ambari.server.state.stack.OsFamily osFamily = injector.getInstance(org.apache.ambari.server.state.stack.OsFamily.class);
        EasyMock.expect(osFamily.os_list()).andReturn(java.util.Collections.singleton("centos6")).anyTimes();
        org.apache.ambari.server.orm.dao.ExtensionLinkDAO linkDao = injector.getInstance(org.apache.ambari.server.orm.dao.ExtensionLinkDAO.class);
        EasyMock.expect(linkDao.findByStack(EasyMock.anyString(), EasyMock.anyString())).andReturn(java.util.Collections.emptyList()).anyTimes();
        javax.persistence.TypedQuery<org.apache.ambari.server.orm.entities.StackEntity> query = createNiceMock(javax.persistence.TypedQuery.class);
        EasyMock.expect(query.setMaxResults(1)).andReturn(query).anyTimes();
        EasyMock.expect(query.getSingleResult()).andReturn(null).anyTimes();
        javax.persistence.EntityManager entityManager = injector.getInstance(javax.persistence.EntityManager.class);
        EasyMock.expect(entityManager.createNamedQuery("StackEntity.findByNameAndVersion", org.apache.ambari.server.orm.entities.StackEntity.class)).andReturn(query).anyTimes();
        EasyMock.expect(entityManager.find(org.easymock.EasyMock.eq(org.apache.ambari.server.orm.entities.MetainfoEntity.class), EasyMock.anyString())).andReturn(createNiceMock(org.apache.ambari.server.orm.entities.MetainfoEntity.class)).anyTimes();
        org.apache.ambari.server.api.services.AmbariMetaInfo metaInfo = new org.apache.ambari.server.api.services.AmbariMetaInfo(injector.getInstance(org.apache.ambari.server.configuration.Configuration.class));
        replayAll();
        injector.injectMembers(metaInfo);
        metaInfo.init();
        org.apache.ambari.server.state.kerberos.KerberosDescriptor hdp24 = metaInfo.getKerberosDescriptor("HDP", "2.4", false);
        org.apache.ambari.server.state.kerberos.KerberosDescriptor hdp25 = metaInfo.getKerberosDescriptor("HDP", "2.5", false);
        org.apache.ambari.server.state.kerberos.KerberosDescriptor user = new org.apache.ambari.server.state.kerberos.KerberosDescriptor(hdp24.toMap());
        org.apache.ambari.server.state.kerberos.KerberosDescriptor updated = org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelper.updateUserKerberosDescriptor(hdp24, hdp25, user);
        org.apache.ambari.server.state.kerberos.KerberosDescriptor composite = new org.apache.ambari.server.state.kerberos.KerberosDescriptor(hdp25.toMap());
        composite.update(updated);
        junit.framework.Assert.assertEquals(org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.GSON.toJson(hdp25.toMap()), org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.GSON.toJson(composite.toMap()));
    }

    @org.junit.Test
    public void testUpdateProperties() throws org.apache.ambari.server.AmbariException {
        org.apache.ambari.server.state.kerberos.KerberosDescriptor oldValue = org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance("{" + (((((("  \"properties\": {" + "    \"realm\": \"${kerberos-env/realm}\",") + "    \"keytab_dir\": \"/etc/security/keytabs\",") + "    \"additional_realms\": \"\",") + "    \"old_property\": \"old_value\"") + "  }") + "}"));
        org.apache.ambari.server.state.kerberos.KerberosDescriptor newValue = org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance("{" + (((((("  \"properties\": {" + "    \"realm\": \"${kerberos-env/realm}\",") + "    \"keytab_dir\": \"/etc/security/keytabs\",") + "    \"additional_realms\": \"\",") + "    \"new_property\": \"new_value\"") + "  }") + "}"));
        org.apache.ambari.server.state.kerberos.KerberosDescriptor userValue = org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance("{" + (((((("  \"properties\": {" + "    \"realm\": \"EXAMPLE.COM\",") + "    \"keytab_dir\": \"/etc/security/keytabs\",") + "    \"additional_realms\": \"\",") + "    \"old_property\": \"old_value\"") + "  }") + "}"));
        org.apache.ambari.server.state.kerberos.KerberosDescriptor updatedUserValue = org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelper.updateUserKerberosDescriptor(oldValue, newValue, userValue);
        junit.framework.Assert.assertEquals(org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance("{\n" + (((((("  \"properties\": {\n" + "    \"new_property\": \"new_value\",\n") + "    \"realm\": \"EXAMPLE.COM\",\n") + "    \"additional_realms\": \"\",\n") + "    \"keytab_dir\": \"/etc/security/keytabs\"\n") + "  }\n") + "}")), updatedUserValue);
    }

    @org.junit.Test
    public void testUpdateIdentities() throws org.apache.ambari.server.AmbariException {
        org.apache.ambari.server.state.kerberos.KerberosDescriptor oldValue = org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance("{" + (((((((((((((((((((((((((((((((((((((((((((((((((((("  \"identities\": [" + "    {") + "      \"name\": \"spnego\",") + "      \"principal\": {") + "        \"value\": \"HTTP/_HOST@${realm}\",") + "        \"type\": \"service\"") + "      },") + "      \"keytab\": {") + "        \"file\": \"${keytab_dir}/spnego.service.keytab\",") + "        \"owner\": {") + "          \"name\": \"root\",") + "          \"access\": \"r\"") + "        },") + "        \"group\": {") + "          \"name\": \"${cluster-env/user_group}\",") + "          \"access\": \"r\"") + "        }") + "      }") + "    },") + "    {") + "      \"name\": \"smokeuser\",") + "      \"principal\": {") + "        \"value\": \"old_value@${realm}\",") + "        \"type\": \"user\",") + "        \"configuration\": \"cluster-env/smokeuser_principal_name\",") + "        \"local_username\": \"${cluster-env/smokeuser}\"") + "      },") + "      \"keytab\": {") + "        \"file\": \"${keytab_dir}/smokeuser.headless.keytab\",") + "        \"owner\": {") + "          \"name\": \"${cluster-env/smokeuser}\",") + "          \"access\": \"r\"") + "        },") + "        \"group\": {") + "          \"name\": \"${cluster-env/user_group}\",") + "          \"access\": \"r\"") + "        },") + "        \"configuration\": \"cluster-env/smokeuser_keytab\"") + "      }") + "    },") + "    {") + "      \"name\": \"old_identity\",") + "      \"principal\": {") + "        \"value\": \"foobar${principal_suffix}@${realm}\",") + "        \"type\": \"user\",") + "        \"configuration\": \"cluster-env/ambari_principal_name\"") + "      },") + "      \"keytab\": {") + "        \"file\": \"${keytab_dir}/ambari.server.keytab\"") + "      }") + "    }") + "  ]") + "}"));
        org.apache.ambari.server.state.kerberos.KerberosDescriptor newValue = org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance("{" + (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((("  \"identities\": [" + "    {") + "      \"name\": \"spnego\",") + "      \"principal\": {") + "        \"value\": \"HTTP/_HOST@${realm}\",") + "        \"type\": \"service\"") + "      },") + "      \"keytab\": {") + "        \"file\": \"${keytab_dir}/spnego.service.keytab\",") + "        \"owner\": {") + "          \"name\": \"root\",") + "          \"access\": \"r\"") + "        },") + "        \"group\": {") + "          \"name\": \"${cluster-env/user_group}\",") + "          \"access\": \"r\"") + "        }") + "      }") + "    },") + "    {") + "      \"name\": \"smokeuser\",") + "      \"principal\": {") + "        \"value\": \"${cluster-env/smokeuser}${principal_suffix}@${realm}\",") + "        \"type\": \"user\",") + "        \"configuration\": \"cluster-env/smokeuser_principal_name\",") + "        \"local_username\": \"${cluster-env/smokeuser}\"") + "      },") + "      \"keytab\": {") + "        \"file\": \"updated_dir/smokeuser.headless.keytab\",") + "        \"owner\": {") + "          \"name\": \"${cluster-env/smokeuser}\",") + "          \"access\": \"r\"") + "        },") + "        \"group\": {") + "          \"name\": \"${cluster-env/user_group}\",") + "          \"access\": \"r\"") + "        },") + "        \"configuration\": \"cluster-env/smokeuser_keytab\"") + "      }") + "    },") + "    {") + "      \"name\": \"ambari-server\",") + "      \"principal\": {") + "        \"value\": \"ambari-server${principal_suffix}@${realm}\",") + "        \"type\": \"user\",") + "        \"configuration\": \"cluster-env/ambari_principal_name\"") + "      },") + "      \"keytab\": {") + "        \"file\": \"${keytab_dir}/ambari.server.keytab\"") + "      }") + "    },") + "    {") + "      \"name\": \"future_identity\",") + "      \"principal\": {") + "        \"value\": \"CHANGED_future${principal_suffix}@${realm}\",") + "        \"type\": \"user\"") + "      },") + "      \"keytab\": {") + "        \"file\": \"${keytab_dir}/future.user.keytab\"") + "      }") + "    }") + "  ]") + "}"));
        org.apache.ambari.server.state.kerberos.KerberosDescriptor userValue = org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance("{" + (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((("  \"identities\": [" + "    {") + "      \"name\": \"spnego\",") + "      \"principal\": {") + "        \"value\": \"CHANGED_HTTP/_HOST@${realm}\",") + "        \"type\": \"service\"") + "      },") + "      \"keytab\": {") + "        \"file\": \"${keytab_dir}/spnego.service.keytab\",") + "        \"owner\": {") + "          \"name\": \"root\",") + "          \"access\": \"r\"") + "        },") + "        \"group\": {") + "          \"name\": \"${cluster-env/user_group}\",") + "          \"access\": \"r\"") + "        }") + "      }") + "    },") + "    {") + "      \"name\": \"smokeuser\",") + "      \"principal\": {") + "        \"value\": \"old_value@${realm}\",") + "        \"type\": \"user\",") + "        \"configuration\": \"cluster-env/smokeuser_principal_name\",") + "        \"local_username\": \"${cluster-env/smokeuser}\"") + "      },") + "      \"keytab\": {") + "        \"file\": \"custom_dir/smokeuser.headless.keytab\",") + "        \"owner\": {") + "          \"name\": \"${cluster-env/smokeuser}\",") + "          \"access\": \"r\"") + "        },") + "        \"group\": {") + "          \"name\": \"${cluster-env/user_group}\",") + "          \"access\": \"r\"") + "        },") + "        \"configuration\": \"cluster-env/smokeuser_keytab\"") + "      }") + "    },") + "    {") + "      \"name\": \"old_identity\",") + "      \"principal\": {") + "        \"value\": \"foobar${principal_suffix}@${realm}\",") + "        \"type\": \"user\",") + "        \"configuration\": \"cluster-env/ambari_principal_name\"") + "      },") + "      \"keytab\": {") + "        \"file\": \"${keytab_dir}/ambari.server.keytab\"") + "      }") + "    },") + "    {") + "      \"name\": \"custom_identity\",") + "      \"principal\": {") + "        \"value\": \"custom${principal_suffix}@${realm}\",") + "        \"type\": \"user\"") + "      },") + "      \"keytab\": {") + "        \"file\": \"${keytab_dir}/custom.user.keytab\"") + "      }") + "    },") + "    {") + "      \"name\": \"future_identity\",") + "      \"principal\": {") + "        \"value\": \"future${principal_suffix}@${realm}\",") + "        \"type\": \"user\"") + "      },") + "      \"keytab\": {") + "        \"file\": \"${keytab_dir}/future.user.keytab\"") + "      }") + "    }") + "  ]") + "}"));
        org.apache.ambari.server.state.kerberos.KerberosDescriptor updatedUserValue = org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelper.updateUserKerberosDescriptor(oldValue, newValue, userValue);
        junit.framework.Assert.assertEquals(org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.GSON.toJson(org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance("{\n" + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((("  \"identities\": [\n" + "    {\n") + "      \"name\": \"future_identity\",\n") + "      \"principal\": {\n") + "        \"value\": \"future${principal_suffix}@${realm}\",\n") + "        \"type\": \"user\"\n") + "      },\n") + "      \"keytab\": {\n") + "        \"file\": \"${keytab_dir}/future.user.keytab\"\n") + "      }\n") + "    },\n") + "    {\n") + "      \"name\": \"custom_identity\",\n") + "      \"principal\": {\n") + "        \"value\": \"custom${principal_suffix}@${realm}\",\n") + "        \"type\": \"user\"\n") + "      },\n") + "      \"keytab\": {\n") + "        \"file\": \"${keytab_dir}/custom.user.keytab\"\n") + "      }\n") + "    },\n") + "    {\n") + "      \"name\": \"spnego\",\n") + "      \"principal\": {\n") + "        \"value\": \"CHANGED_HTTP/_HOST@${realm}\",\n") + "        \"type\": \"service\"\n") + "      },\n") + "      \"keytab\": {\n") + "        \"file\": \"${keytab_dir}/spnego.service.keytab\",\n") + "        \"owner\": {\n") + "          \"name\": \"root\",\n") + "          \"access\": \"r\"\n") + "        },\n") + "        \"group\": {\n") + "          \"name\": \"${cluster-env/user_group}\",\n") + "          \"access\": \"r\"\n") + "        }\n") + "      }\n") + "    },\n") + "    {\n") + "      \"name\": \"smokeuser\",\n") + "      \"principal\": {\n") + "        \"value\": \"${cluster-env/smokeuser}${principal_suffix}@${realm}\",\n") + "        \"local_username\": \"${cluster-env/smokeuser}\",\n") + "        \"configuration\": \"cluster-env/smokeuser_principal_name\",\n") + "        \"type\": \"user\"\n") + "      },\n") + "      \"keytab\": {\n") + "        \"file\": \"custom_dir/smokeuser.headless.keytab\",\n") + "        \"owner\": {\n") + "          \"name\": \"${cluster-env/smokeuser}\",\n") + "          \"access\": \"r\"\n") + "        },\n") + "        \"group\": {\n") + "          \"name\": \"${cluster-env/user_group}\",\n") + "          \"access\": \"r\"\n") + "        },\n") + "        \"configuration\": \"cluster-env/smokeuser_keytab\"\n") + "      }\n") + "    }\n") + "  ]\n") + "}")).toMap()), org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.GSON.toJson(updatedUserValue.toMap()));
        newValue.update(updatedUserValue);
        junit.framework.Assert.assertEquals(org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.GSON.toJson(org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance("{\n" + (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((("  \"identities\": [\n" + "    {\n") + "      \"name\": \"ambari-server\",\n") + "      \"principal\": {\n") + "        \"value\": \"ambari-server${principal_suffix}@${realm}\",\n") + "        \"configuration\": \"cluster-env/ambari_principal_name\",\n") + "        \"type\": \"user\"\n") + "      },\n") + "      \"keytab\": {\n") + "        \"file\": \"${keytab_dir}/ambari.server.keytab\"\n") + "      }\n") + "    },\n") + "    {\n") + "      \"name\": \"custom_identity\",\n") + "      \"principal\": {\n") + "        \"value\": \"custom${principal_suffix}@${realm}\",\n") + "        \"type\": \"user\"\n") + "      },\n") + "      \"keytab\": {\n") + "        \"file\": \"${keytab_dir}/custom.user.keytab\"\n") + "      }\n") + "    },\n") + "    {\n") + "      \"name\": \"future_identity\",\n") + "      \"principal\": {\n") + "        \"value\": \"future${principal_suffix}@${realm}\",\n") + "        \"type\": \"user\"\n") + "      },\n") + "      \"keytab\": {\n") + "        \"file\": \"${keytab_dir}/future.user.keytab\"\n") + "      }\n") + "    },\n") + "    {\n") + "      \"name\": \"spnego\",\n") + "      \"principal\": {\n") + "        \"value\": \"CHANGED_HTTP/_HOST@${realm}\",\n") + "        \"type\": \"service\"\n") + "      },\n") + "      \"keytab\": {\n") + "        \"file\": \"${keytab_dir}/spnego.service.keytab\",\n") + "        \"owner\": {\n") + "          \"name\": \"root\",\n") + "          \"access\": \"r\"\n") + "        },\n") + "        \"group\": {\n") + "          \"name\": \"${cluster-env/user_group}\",\n") + "          \"access\": \"r\"\n") + "        }\n") + "      }\n") + "    },\n") + "    {\n") + "      \"name\": \"smokeuser\",\n") + "      \"principal\": {\n") + "        \"value\": \"${cluster-env/smokeuser}${principal_suffix}@${realm}\",\n") + "        \"local_username\": \"${cluster-env/smokeuser}\",\n") + "        \"configuration\": \"cluster-env/smokeuser_principal_name\",\n") + "        \"type\": \"user\"\n") + "      },\n") + "      \"keytab\": {\n") + "        \"file\": \"custom_dir/smokeuser.headless.keytab\",\n") + "        \"owner\": {\n") + "          \"name\": \"${cluster-env/smokeuser}\",\n") + "          \"access\": \"r\"\n") + "        },\n") + "        \"group\": {\n") + "          \"name\": \"${cluster-env/user_group}\",\n") + "          \"access\": \"r\"\n") + "        },\n") + "        \"configuration\": \"cluster-env/smokeuser_keytab\"\n") + "      }\n") + "    }\n") + "  ]\n") + "}")).toMap()), org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.GSON.toJson(newValue.toMap()));
    }

    @org.junit.Test
    public void testUpdateConfigurations() throws org.apache.ambari.server.AmbariException {
        org.apache.ambari.server.state.kerberos.KerberosDescriptor oldValue = org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance("{\n" + (((((((((((((((((((((("  \"configurations\": [\n" + "    {\n") + "      \"core-site\": {\n") + "        \"hadoop.security.authentication\": \"kerberos\",\n") + "        \"hadoop.security.authorization\": \"true\",\n") + "        \"hadoop.proxyuser.HTTP.groups\": \"${hadoop-env/proxyuser_group}\"\n") + "      }\n") + "    },\n") + "    {\n") + "      \"some-site\": {\n") + "        \"property.unchanged\": \"value 1\",\n") + "        \"property.removed\": \"removed value\",\n") + "        \"property.altered\": \"old value\"\n,") + "        \"property.property.changed.in.new\": \"orig value\"\n") + "      }\n") + "    },\n") + "    {\n") + "      \"old-site\": {\n") + "        \"property\": \"value\"\n") + "      }\n") + "    }\n") + "  ]\n") + "}\n"));
        org.apache.ambari.server.state.kerberos.KerberosDescriptor newValue = org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance("{\n" + (((((((((((((((((((((("  \"configurations\": [\n" + "    {\n") + "      \"core-site\": {\n") + "        \"hadoop.security.authentication\": \"kerberos\",\n") + "        \"hadoop.security.authorization\": \"true\",\n") + "        \"hadoop.proxyuser.HTTP.groups\": \"${hadoop-env/proxyuser_group}\"\n") + "      }\n") + "    },\n") + "    {\n") + "      \"some-site\": {\n") + "        \"property.unchanged\": \"value 1\",\n") + "        \"property.added\": \"added value\",\n") + "        \"property.altered\": \"new value\",\n") + "        \"property.changed.in.new\": \"new value\"\n") + "      }\n") + "    },\n") + "    {\n") + "      \"new-site\": {\n") + "        \"property.for.new.site\": \"value\"\n") + "      }\n") + "    }\n") + "  ]\n") + "}\n"));
        org.apache.ambari.server.state.kerberos.KerberosDescriptor userValue = org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance("{\n" + (((((((((((((((((((((("  \"configurations\": [\n" + "    {\n") + "      \"core-site\": {\n") + "        \"hadoop.security.authentication\": \"kerberos\",\n") + "        \"hadoop.security.authorization\": \"true\",\n") + "        \"hadoop.proxyuser.HTTP.groups\": \"${hadoop-env/proxyuser_group}\"\n") + "      }\n") + "    },\n") + "    {\n") + "      \"some-site\": {\n") + "        \"property.unchanged\": \"value 1\",\n") + "        \"property.removed\": \"changed removed value\",\n") + "        \"property.altered\": \"custom value\"\n,") + "        \"property.property.changed.in.new\": \"orig value\"\n") + "      }\n") + "    },\n") + "    {\n") + "      \"old-site\": {\n") + "        \"property\": \"value\"\n") + "      }\n") + "    }\n") + "  ]\n") + "}\n"));
        org.apache.ambari.server.state.kerberos.KerberosDescriptor updatedUserValue = org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelper.updateUserKerberosDescriptor(oldValue, newValue, userValue);
        junit.framework.Assert.assertEquals(org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.GSON.toJson(org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance("{\n" + ((((((((((((((((("  \"configurations\": [\n" + "    {\n") + "      \"core-site\": {\n") + "        \"hadoop.security.authentication\": \"kerberos\",\n") + "        \"hadoop.security.authorization\": \"true\",\n") + "        \"hadoop.proxyuser.HTTP.groups\": \"${hadoop-env/proxyuser_group}\"\n") + "      }\n") + "    },\n") + "    {\n") + "      \"some-site\": {\n") + "        \"property.unchanged\": \"value 1\",\n") + "        \"property.added\": \"added value\",\n") + "        \"property.altered\": \"custom value\",\n") + "        \"property.changed.in.new\": \"new value\"\n") + "      }\n") + "    }\n") + "  ]\n") + "}\n")).toMap()), org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.GSON.toJson(updatedUserValue.toMap()));
    }

    @org.junit.Test
    public void testUpdateAuthToLocalRules() throws org.apache.ambari.server.AmbariException {
        org.apache.ambari.server.state.kerberos.KerberosDescriptor oldValue = org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance("{\n" + (((("  \"auth_to_local_properties\" : [\n" + "    \"core-site/hadoop.security.auth_to_local\",\n") + "    \"some-site/to.be.removed\"\n") + "  ]\n") + "}\n"));
        org.apache.ambari.server.state.kerberos.KerberosDescriptor newValue = org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance("{\n" + (((("  \"auth_to_local_properties\" : [\n" + "    \"core-site/hadoop.security.auth_to_local\",\n") + "    \"some-site/to.be.added\"\n") + "  ]\n") + "}\n"));
        org.apache.ambari.server.state.kerberos.KerberosDescriptor userValue = org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance("{\n" + (((("  \"auth_to_local_properties\" : [\n" + "    \"core-site/hadoop.security.auth_to_local\",\n") + "    \"some-site/added.by.user\"\n") + "  ]\n") + "}\n"));
        org.apache.ambari.server.state.kerberos.KerberosDescriptor updatedUserValue = org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelper.updateUserKerberosDescriptor(oldValue, newValue, userValue);
        junit.framework.Assert.assertEquals(org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance("{\n" + ((((("  \"auth_to_local_properties\" : [\n" + "    \"core-site/hadoop.security.auth_to_local\",\n") + "    \"some-site/to.be.added\",\n") + "    \"some-site/added.by.user\"\n") + "  ]\n") + "}\n")), updatedUserValue);
    }

    @org.junit.Test
    public void testUpdateServices() throws org.apache.ambari.server.AmbariException {
        org.apache.ambari.server.state.kerberos.KerberosDescriptor oldValue = org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance("{\n" + (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((("  \"services\": [\n" + "    {\n") + "      \"components\": [\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.secondary.namenode.kerberos.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"nn/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"secondary_namenode_nn\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/nn.service.keytab\",\n") + "                \"configuration\": \"hdfs-site/dfs.secondary.namenode.keytab.file\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.secondary.namenode.kerberos.internal.spnego.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": null\n") + "              },\n") + "              \"name\": \"/spnego\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"SECONDARY_NAMENODE\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"name\": \"/HDFS/NAMENODE/hdfs\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"HDFS_CLIENT\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.datanode.kerberos.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"dn/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"datanode_dn\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/dn.service.keytab\",\n") + "                \"configuration\": \"hdfs-site/dfs.datanode.keytab.file\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"configurations\": [\n") + "            {\n") + "              \"hdfs-site\": {\n") + "                \"dfs.datanode.address\": \"0.0.0.0:1019\",\n") + "                \"dfs.datanode.http.address\": \"0.0.0.0:1022\"\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"name\": \"DATANODE\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/nfs.kerberos.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"nfs/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"nfsgateway\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/nfs.service.keytab\",\n") + "                \"configuration\": \"hdfs-site/nfs.keytab.file\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"name\": \"NFS_GATEWAY\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.journalnode.kerberos.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"jn/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"journalnode_jn\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/jn.service.keytab\",\n") + "                \"configuration\": \"hdfs-site/dfs.journalnode.keytab.file\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.journalnode.kerberos.internal.spnego.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": null\n") + "              },\n") + "              \"name\": \"/spnego\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"JOURNALNODE\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hadoop-env/hdfs_principal_name\",\n") + "                \"type\": \"user\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"${hadoop-env/hdfs_user}${principal_suffix}@${realm}\"\n") + "              },\n") + "              \"name\": \"hdfs\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/hdfs.headless.keytab\",\n") + "                \"configuration\": \"hadoop-env/hdfs_user_keytab\",\n") + "                \"group\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.namenode.kerberos.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"nn/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"namenode_nn\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/nn.service.keytab\",\n") + "                \"configuration\": \"hdfs-site/dfs.namenode.keytab.file\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.namenode.kerberos.internal.spnego.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": null\n") + "              },\n") + "              \"name\": \"/spnego\"\n") + "            }\n") + "          ],\n") + "          \"configurations\": [\n") + "            {\n") + "              \"hdfs-site\": {\n") + "                \"dfs.block.access.token.enable\": \"true\"\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"name\": \"NAMENODE\"\n") + "        }\n") + "      ],\n") + "      \"identities\": [\n") + "        {\n") + "          \"principal\": {\n") + "            \"configuration\": \"hdfs-site/dfs.web.authentication.kerberos.principal\",\n") + "            \"type\": null,\n") + "            \"local_username\": null,\n") + "            \"value\": null\n") + "          },\n") + "          \"name\": \"/spnego\",\n") + "          \"keytab\": {\n") + "            \"owner\": {\n") + "              \"access\": null,\n") + "              \"name\": null\n") + "            },\n") + "            \"file\": null,\n") + "            \"configuration\": \"hdfs-site/dfs.web.authentication.kerberos.keytab\",\n") + "            \"group\": {\n") + "              \"access\": null,\n") + "              \"name\": null\n") + "            }\n") + "          }\n") + "        },\n") + "        {\n") + "          \"name\": \"/smokeuser\"\n") + "        }\n") + "      ],\n") + "      \"auth_to_local_properties\": [\n") + "        \"core-site/hadoop.security.auth_to_local\"\n") + "      ],\n") + "      \"configurations\": [\n") + "        {\n") + "          \"core-site\": {\n") + "            \"hadoop.security.authorization\": \"true\",\n") + "            \"hadoop.security.authentication\": \"kerberos\",\n") + "            \"hadoop.proxyuser.HTTP.groups\": \"${hadoop-env/proxyuser_group}\"\n") + "          }\n") + "        }\n") + "      ],\n") + "      \"name\": \"HDFS\"\n") + "    },\n") + "    {\n") + "      \"components\" : [\n") + "        {\n") + "          \"name\" : \"OLD_SERVICE_CLIENT\"\n") + "        },\n") + "        {\n") + "          \"identities\" : [\n") + "            {\n") + "              \"name\" : \"/HDFS/NAMENODE/hdfs\"\n") + "            }\n") + "          ],\n") + "          \"name\" : \"OLD_SERVICE_FOOBAR\"\n") + "        },\n") + "        {\n") + "          \"identities\" : [\n") + "            {\n") + "              \"name\" : \"/HDFS/NAMENODE/hdfs\"\n") + "            },\n") + "            {\n") + "              \"name\" : \"/HIVE/HIVE_SERVER/hive_server_hive\"\n") + "            }\n") + "          ],\n") + "          \"name\" : \"OLD_SERVICE_SERVER\"\n") + "        }\n") + "      ],\n") + "      \"identities\" : [\n") + "        {\n") + "          \"name\" : \"/smokeuser\"\n") + "        }\n") + "      ],\n") + "      \"name\" : \"OLD_SERVICE\"\n") + "    },\n") + "    {\n") + "      \"components\": [\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"application-properties/atlas.authentication.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${atlas-env/metadata_user}\",\n") + "                \"value\": \"atlas/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"atlas\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${atlas-env/metadata_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/atlas.service.keytab\",\n") + "                \"configuration\": \"application-properties/atlas.authentication.keytab\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"application-properties/atlas.http.authentication.kerberos.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": \"HTTP/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"/spnego\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": null,\n") + "                  \"name\": null\n") + "                },\n") + "                \"file\": null,\n") + "                \"configuration\": \"application-properties/atlas.http.authentication.kerberos.keytab\",\n") + "                \"group\": {\n") + "                  \"access\": null,\n") + "                  \"name\": null\n") + "                }\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"name\": \"ATLAS_SERVER\"\n") + "        }\n") + "      ],\n") + "      \"auth_to_local_properties\": [\n") + "        \"application-properties/atlas.http.authentication.kerberos.name.rules|new_lines_escaped\"\n") + "      ],\n") + "      \"configurations\": [\n") + "        {\n") + "          \"application-properties\": {\n") + "            \"atlas.authentication.method\": \"kerberos\",\n") + "            \"atlas.http.authentication.enabled\": \"true\",\n") + "            \"atlas.http.authentication.type\": \"kerberos\"\n") + "          }\n") + "        }\n") + "      ],\n") + "      \"name\": \"ATLAS\"\n") + "    },\n") + "    {\n") + "      \"components\": [\n") + "        {\n") + "          \"name\": \"EXISTING_SERVICE_CLIENT\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"name\": \"/HDFS/NAMENODE/hdfs\"\n") + "            },\n") + "            {\n") + "              \"name\": \"/HIVE/HIVE_SERVER/hive_server_hive\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"EXISTING_SERVICE_SERVER\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"name\": \"/HDFS/NAMENODE/hdfs\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"EXISTING_SERVICE_ORIG_SERVER\"\n") + "        }\n") + "      ],\n") + "      \"identities\": [\n") + "        {\n") + "          \"name\": \"/smokeuser\"\n") + "        }\n") + "      ],\n") + "      \"name\": \"EXISTING_SERVICE\"\n") + "    }\n") + "  ]\n") + "}\n"));
        org.apache.ambari.server.state.kerberos.KerberosDescriptor newValue = org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance("{\n" + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((("  \"services\": [\n" + "    {\n") + "      \"components\": [\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"application-properties/atlas.jaas.KafkaClient.option.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${atlas-env/metadata_user}\",\n") + "                \"value\": \"atlas/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"atlas\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${atlas-env/metadata_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/atlas.service.keytab\",\n") + "                \"configuration\": \"application-properties/atlas.jaas.KafkaClient.option.keyTab\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"reference\": \"/ATLAS/ATLAS_SERVER/atlas\",\n") + "              \"principal\": {\n") + "                \"configuration\": \"application-properties/atlas.authentication.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": null\n") + "              },\n") + "              \"name\": \"atlas_auth\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": null,\n") + "                  \"name\": null\n") + "                },\n") + "                \"file\": null,\n") + "                \"configuration\": \"application-properties/atlas.authentication.keytab\",\n") + "                \"group\": {\n") + "                  \"access\": null,\n") + "                  \"name\": null\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"application-properties/atlas.authentication.method.kerberos.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": \"HTTP/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"/spnego\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": null,\n") + "                  \"name\": null\n") + "                },\n") + "                \"file\": null,\n") + "                \"configuration\": \"application-properties/atlas.authentication.method.kerberos.keytab\",\n") + "                \"group\": {\n") + "                  \"access\": null,\n") + "                  \"name\": null\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"reference\": \"/ATLAS/ATLAS_SERVER/atlas\",\n") + "              \"principal\": {\n") + "                \"configuration\": \"ranger-atlas-audit/xasecure.audit.jaas.Client.option.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": null\n") + "              },\n") + "              \"name\": \"ranger_atlas_audit\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": null,\n") + "                  \"name\": null\n") + "                },\n") + "                \"file\": null,\n") + "                \"configuration\": \"ranger-atlas-audit/xasecure.audit.jaas.Client.option.keyTab\",\n") + "                \"group\": {\n") + "                  \"access\": null,\n") + "                  \"name\": null\n") + "                }\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"name\": \"ATLAS_SERVER\"\n") + "        }\n") + "      ],\n") + "      \"auth_to_local_properties\": [\n") + "        \"application-properties/atlas.authentication.method.kerberos.name.rules|new_lines_escaped\"\n") + "      ],\n") + "      \"configurations\": [\n") + "        {\n") + "          \"ranger-atlas-audit\": {\n") + "            \"xasecure.audit.jaas.Client.loginModuleControlFlag\": \"required\",\n") + "            \"xasecure.audit.jaas.Client.option.serviceName\": \"solr\",\n") + "            \"xasecure.audit.jaas.Client.loginModuleName\": \"com.sun.security.auth.module.Krb5LoginModule\",\n") + "            \"xasecure.audit.jaas.Client.option.useKeyTab\": \"true\",\n") + "            \"xasecure.audit.jaas.Client.option.storeKey\": \"false\",\n") + "            \"xasecure.audit.destination.solr.force.use.inmemory.jaas.config\": \"true\"\n") + "          }\n") + "        },\n") + "        {\n") + "          \"application-properties\": {\n") + "            \"atlas.kafka.security.protocol\": \"PLAINTEXTSASL\",\n") + "            \"atlas.jaas.KafkaClient.option.storeKey\": \"true\",\n") + "            \"atlas.solr.kerberos.enable\": \"true\",\n") + "            \"atlas.jaas.KafkaClient.loginModuleControlFlag\": \"required\",\n") + "            \"atlas.authentication.method.kerberos\": \"true\",\n") + "            \"atlas.jaas.KafkaClient.option.useKeyTab\": \"true\",\n") + "            \"atlas.kafka.sasl.kerberos.service.name\": \"${kafka-env/kafka_user}\",\n") + "            \"atlas.jaas.KafkaClient.loginModuleName\": \"com.sun.security.auth.module.Krb5LoginModule\",\n") + "            \"atlas.jaas.KafkaClient.option.serviceName\": \"${kafka-env/kafka_user}\"\n") + "          }\n") + "        }\n") + "      ],\n") + "      \"name\": \"ATLAS\"\n") + "    },\n") + "    {\n") + "      \"components\": [\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.secondary.namenode.kerberos.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"nn/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"secondary_namenode_nn\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/nn.service.keytab\",\n") + "                \"configuration\": \"hdfs-site/dfs.secondary.namenode.keytab.file\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.secondary.namenode.kerberos.internal.spnego.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": null\n") + "              },\n") + "              \"name\": \"/spnego\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"SECONDARY_NAMENODE\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"name\": \"/HDFS/NAMENODE/hdfs\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"HDFS_CLIENT\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.datanode.kerberos.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"dn/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"datanode_dn\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/dn.service.keytab\",\n") + "                \"configuration\": \"hdfs-site/dfs.datanode.keytab.file\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"configurations\": [\n") + "            {\n") + "              \"hdfs-site\": {\n") + "                \"dfs.datanode.address\": \"0.0.0.0:1019\",\n") + "                \"dfs.datanode.http.address\": \"0.0.0.0:1022\"\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"name\": \"DATANODE\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/nfs.kerberos.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"nfs/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"nfsgateway\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/nfs.service.keytab\",\n") + "                \"configuration\": \"hdfs-site/nfs.keytab.file\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"name\": \"NFS_GATEWAY\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.journalnode.kerberos.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"jn/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"journalnode_jn\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/jn.service.keytab\",\n") + "                \"configuration\": \"hdfs-site/dfs.journalnode.keytab.file\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.journalnode.kerberos.internal.spnego.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": null\n") + "              },\n") + "              \"name\": \"/spnego\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"JOURNALNODE\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hadoop-env/hdfs_principal_name\",\n") + "                \"type\": \"user\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"${hadoop-env/hdfs_user}${principal_suffix}@${realm}\"\n") + "              },\n") + "              \"name\": \"hdfs\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/hdfs.headless.keytab\",\n") + "                \"configuration\": \"hadoop-env/hdfs_user_keytab\",\n") + "                \"group\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.namenode.kerberos.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"nn/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"namenode_nn\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/nn.service.keytab\",\n") + "                \"configuration\": \"hdfs-site/dfs.namenode.keytab.file\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.namenode.kerberos.internal.spnego.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": null\n") + "              },\n") + "              \"name\": \"/spnego\"\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"ranger-hdfs-audit/xasecure.audit.jaas.Client.option.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": null\n") + "              },\n") + "              \"name\": \"/HDFS/NAMENODE/namenode_nn\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": null,\n") + "                  \"name\": null\n") + "                },\n") + "                \"file\": null,\n") + "                \"configuration\": \"ranger-hdfs-audit/xasecure.audit.jaas.Client.option.keyTab\",\n") + "                \"group\": {\n") + "                  \"access\": null,\n") + "                  \"name\": null\n") + "                }\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"configurations\": [\n") + "            {\n") + "              \"hdfs-site\": {\n") + "                \"dfs.block.access.token.enable\": \"true\"\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"name\": \"NAMENODE\"\n") + "        }\n") + "      ],\n") + "      \"identities\": [\n") + "        {\n") + "          \"principal\": {\n") + "            \"configuration\": \"hdfs-site/dfs.web.authentication.kerberos.principal\",\n") + "            \"type\": null,\n") + "            \"local_username\": null,\n") + "            \"value\": null\n") + "          },\n") + "          \"name\": \"/spnego\",\n") + "          \"keytab\": {\n") + "            \"owner\": {\n") + "              \"access\": null,\n") + "              \"name\": null\n") + "            },\n") + "            \"file\": null,\n") + "            \"configuration\": \"hdfs-site/dfs.web.authentication.kerberos.keytab\",\n") + "            \"group\": {\n") + "              \"access\": null,\n") + "              \"name\": null\n") + "            }\n") + "          }\n") + "        },\n") + "        {\n") + "          \"name\": \"/smokeuser\"\n") + "        }\n") + "      ],\n") + "      \"auth_to_local_properties\": [\n") + "        \"core-site/hadoop.security.auth_to_local\"\n") + "      ],\n") + "      \"configurations\": [\n") + "        {\n") + "          \"ranger-hdfs-audit\": {\n") + "            \"xasecure.audit.jaas.Client.loginModuleControlFlag\": \"required\",\n") + "            \"xasecure.audit.jaas.Client.option.serviceName\": \"solr\",\n") + "            \"xasecure.audit.jaas.Client.loginModuleName\": \"com.sun.security.auth.module.Krb5LoginModule\",\n") + "            \"xasecure.audit.jaas.Client.option.useKeyTab\": \"true\",\n") + "            \"xasecure.audit.jaas.Client.option.storeKey\": \"false\",\n") + "            \"xasecure.audit.destination.solr.force.use.inmemory.jaas.config\": \"true\"\n") + "          }\n") + "        },\n") + "        {\n") + "          \"core-site\": {\n") + "            \"hadoop.security.authorization\": \"true\",\n") + "            \"hadoop.security.authentication\": \"kerberos\",\n") + "            \"hadoop.proxyuser.HTTP.groups\": \"${hadoop-env/proxyuser_group}\"\n") + "          }\n") + "        }\n") + "      ],\n") + "      \"name\": \"HDFS\"\n") + "    },\n") + "    {\n") + "      \"components\": [\n") + "        {\n") + "          \"name\": \"NEW_SERVICE_CLIENT\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"name\": \"/HDFS/NAMENODE/hdfs\"\n") + "            },\n") + "            {\n") + "              \"name\": \"/HIVE/HIVE_SERVER/hive_server_hive\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"NEW_SERVICE_FOO_BAR\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"name\": \"/HDFS/NAMENODE/hdfs\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"NEW_SERVICE_SERVER\"\n") + "        }\n") + "      ],\n") + "      \"identities\": [\n") + "        {\n") + "          \"name\": \"/smokeuser\"\n") + "        }\n") + "      ],\n") + "      \"name\": \"NEW_SERVICE\"\n") + "    },\n") + "    {\n") + "      \"components\": [\n") + "        {\n") + "          \"name\": \"EXISTING_SERVICE_CLIENT\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"name\": \"/HDFS/NAMENODE/hdfs\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"EXISTING_SERVICE_SERVER\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"name\": \"/HDFS/NAMENODE/hdfs\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"EXISTING_SERVICE_NEW_SERVER\"\n") + "        }\n") + "      ],\n") + "      \"identities\": [\n") + "        {\n") + "          \"name\": \"/smokeuser\"\n") + "        },\n") + "        {\n") + "          \"name\": \"/HIVE/HIVE_SERVER/hive_server_hive\"\n") + "        }\n") + "      ],\n") + "      \"name\": \"EXISTING_SERVICE\"\n") + "    }\n") + "  ]\n") + "}\n"));
        org.apache.ambari.server.state.kerberos.KerberosDescriptor userValue = org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance(oldValue.toMap());
        org.apache.ambari.server.state.kerberos.KerberosDescriptor updatedUserValue = org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelper.updateUserKerberosDescriptor(oldValue, newValue, userValue);
        junit.framework.Assert.assertEquals(org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.GSON.toJson(org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance("{\n" + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((("  \"services\": [\n" + "    {\n") + "      \"components\": [\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"application-properties/atlas.jaas.KafkaClient.option.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${atlas-env/metadata_user}\",\n") + "                \"value\": \"atlas/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"atlas\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${atlas-env/metadata_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/atlas.service.keytab\",\n") + "                \"configuration\": \"application-properties/atlas.jaas.KafkaClient.option.keyTab\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"application-properties/atlas.authentication.method.kerberos.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": \"HTTP/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"/spnego\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": null,\n") + "                  \"name\": null\n") + "                },\n") + "                \"file\": null,\n") + "                \"configuration\": \"application-properties/atlas.authentication.method.kerberos.keytab\",\n") + "                \"group\": {\n") + "                  \"access\": null,\n") + "                  \"name\": null\n") + "                }\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"name\": \"ATLAS_SERVER\"\n") + "        }\n") + "      ],\n") + "      \"auth_to_local_properties\": [\n") + "        \"application-properties/atlas.authentication.method.kerberos.name.rules|new_lines_escaped\"\n") + "      ],\n") + "      \"configurations\": [\n") + "        {\n") + "          \"application-properties\": {\n") + "            \"atlas.kafka.security.protocol\": \"PLAINTEXTSASL\",\n") + "            \"atlas.jaas.KafkaClient.option.storeKey\": \"true\",\n") + "            \"atlas.solr.kerberos.enable\": \"true\",\n") + "            \"atlas.jaas.KafkaClient.loginModuleControlFlag\": \"required\",\n") + "            \"atlas.authentication.method.kerberos\": \"true\",\n") + "            \"atlas.jaas.KafkaClient.option.useKeyTab\": \"true\",\n") + "            \"atlas.kafka.sasl.kerberos.service.name\": \"${kafka-env/kafka_user}\",\n") + "            \"atlas.jaas.KafkaClient.loginModuleName\": \"com.sun.security.auth.module.Krb5LoginModule\",\n") + "            \"atlas.jaas.KafkaClient.option.serviceName\": \"${kafka-env/kafka_user}\"\n") + "          }\n") + "        }\n") + "      ],\n") + "      \"name\": \"ATLAS\"\n") + "    },\n") + "    {\n") + "      \"components\": [\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.secondary.namenode.kerberos.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"nn/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"secondary_namenode_nn\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/nn.service.keytab\",\n") + "                \"configuration\": \"hdfs-site/dfs.secondary.namenode.keytab.file\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.secondary.namenode.kerberos.internal.spnego.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": null\n") + "              },\n") + "              \"name\": \"/spnego\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"SECONDARY_NAMENODE\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"name\": \"/HDFS/NAMENODE/hdfs\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"HDFS_CLIENT\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.datanode.kerberos.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"dn/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"datanode_dn\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/dn.service.keytab\",\n") + "                \"configuration\": \"hdfs-site/dfs.datanode.keytab.file\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"configurations\": [\n") + "            {\n") + "              \"hdfs-site\": {\n") + "                \"dfs.datanode.address\": \"0.0.0.0:1019\",\n") + "                \"dfs.datanode.http.address\": \"0.0.0.0:1022\"\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"name\": \"DATANODE\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/nfs.kerberos.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"nfs/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"nfsgateway\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/nfs.service.keytab\",\n") + "                \"configuration\": \"hdfs-site/nfs.keytab.file\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"name\": \"NFS_GATEWAY\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.journalnode.kerberos.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"jn/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"journalnode_jn\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/jn.service.keytab\",\n") + "                \"configuration\": \"hdfs-site/dfs.journalnode.keytab.file\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.journalnode.kerberos.internal.spnego.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": null\n") + "              },\n") + "              \"name\": \"/spnego\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"JOURNALNODE\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hadoop-env/hdfs_principal_name\",\n") + "                \"type\": \"user\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"${hadoop-env/hdfs_user}${principal_suffix}@${realm}\"\n") + "              },\n") + "              \"name\": \"hdfs\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/hdfs.headless.keytab\",\n") + "                \"configuration\": \"hadoop-env/hdfs_user_keytab\",\n") + "                \"group\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.namenode.kerberos.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"nn/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"namenode_nn\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/nn.service.keytab\",\n") + "                \"configuration\": \"hdfs-site/dfs.namenode.keytab.file\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.namenode.kerberos.internal.spnego.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": null\n") + "              },\n") + "              \"name\": \"/spnego\"\n") + "            }\n") + "          ],\n") + "          \"configurations\": [\n") + "            {\n") + "              \"hdfs-site\": {\n") + "                \"dfs.block.access.token.enable\": \"true\"\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"name\": \"NAMENODE\"\n") + "        }\n") + "      ],\n") + "      \"identities\": [\n") + "        {\n") + "          \"principal\": {\n") + "            \"configuration\": \"hdfs-site/dfs.web.authentication.kerberos.principal\",\n") + "            \"type\": null,\n") + "            \"local_username\": null,\n") + "            \"value\": null\n") + "          },\n") + "          \"name\": \"/spnego\",\n") + "          \"keytab\": {\n") + "            \"owner\": {\n") + "              \"access\": null,\n") + "              \"name\": null\n") + "            },\n") + "            \"file\": null,\n") + "            \"configuration\": \"hdfs-site/dfs.web.authentication.kerberos.keytab\",\n") + "            \"group\": {\n") + "              \"access\": null,\n") + "              \"name\": null\n") + "            }\n") + "          }\n") + "        },\n") + "        {\n") + "          \"name\": \"/smokeuser\"\n") + "        }\n") + "      ],\n") + "      \"auth_to_local_properties\": [\n") + "        \"core-site/hadoop.security.auth_to_local\"\n") + "      ],\n") + "      \"configurations\": [\n") + "        {\n") + "          \"core-site\": {\n") + "            \"hadoop.security.authorization\": \"true\",\n") + "            \"hadoop.security.authentication\": \"kerberos\",\n") + "            \"hadoop.proxyuser.HTTP.groups\": \"${hadoop-env/proxyuser_group}\"\n") + "          }\n") + "        }\n") + "      ],\n") + "      \"name\": \"HDFS\"\n") + "    },\n") + "    {\n") + "      \"components\": [\n") + "        {\n") + "          \"name\": \"EXISTING_SERVICE_CLIENT\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"name\": \"/HDFS/NAMENODE/hdfs\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"EXISTING_SERVICE_SERVER\"\n") + "        }\n") + "      ],\n") + "      \"identities\": [\n") + "        {\n") + "          \"name\": \"/smokeuser\"\n") + "        }\n") + "      ],\n") + "      \"name\": \"EXISTING_SERVICE\"\n") + "    }\n") + "  ]\n") + "}\n")).toMap()), org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.GSON.toJson(updatedUserValue.toMap()));
        newValue.update(updatedUserValue);
        junit.framework.Assert.assertEquals(org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.GSON.toJson(org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.KERBEROS_DESCRIPTOR_FACTORY.createInstance("{\n" + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((("  \"services\": [\n" + "    {\n") + "      \"components\": [\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"application-properties/atlas.jaas.KafkaClient.option.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${atlas-env/metadata_user}\",\n") + "                \"value\": \"atlas/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"atlas\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${atlas-env/metadata_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/atlas.service.keytab\",\n") + "                \"configuration\": \"application-properties/atlas.jaas.KafkaClient.option.keyTab\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"reference\": \"/ATLAS/ATLAS_SERVER/atlas\",\n") + "              \"principal\": {\n") + "                \"configuration\": \"application-properties/atlas.authentication.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": null\n") + "              },\n") + "              \"name\": \"atlas_auth\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": null,\n") + "                  \"name\": null\n") + "                },\n") + "                \"file\": null,\n") + "                \"configuration\": \"application-properties/atlas.authentication.keytab\",\n") + "                \"group\": {\n") + "                  \"access\": null,\n") + "                  \"name\": null\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"application-properties/atlas.authentication.method.kerberos.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": \"HTTP/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"/spnego\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": null,\n") + "                  \"name\": null\n") + "                },\n") + "                \"file\": null,\n") + "                \"configuration\": \"application-properties/atlas.authentication.method.kerberos.keytab\",\n") + "                \"group\": {\n") + "                  \"access\": null,\n") + "                  \"name\": null\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"reference\": \"/ATLAS/ATLAS_SERVER/atlas\",\n") + "              \"principal\": {\n") + "                \"configuration\": \"ranger-atlas-audit/xasecure.audit.jaas.Client.option.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": null\n") + "              },\n") + "              \"name\": \"ranger_atlas_audit\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": null,\n") + "                  \"name\": null\n") + "                },\n") + "                \"file\": null,\n") + "                \"configuration\": \"ranger-atlas-audit/xasecure.audit.jaas.Client.option.keyTab\",\n") + "                \"group\": {\n") + "                  \"access\": null,\n") + "                  \"name\": null\n") + "                }\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"name\": \"ATLAS_SERVER\"\n") + "        }\n") + "      ],\n") + "      \"auth_to_local_properties\": [\n") + "        \"application-properties/atlas.authentication.method.kerberos.name.rules|new_lines_escaped\"\n") + "      ],\n") + "      \"configurations\": [\n") + "        {\n") + "          \"ranger-atlas-audit\": {\n") + "            \"xasecure.audit.jaas.Client.loginModuleControlFlag\": \"required\",\n") + "            \"xasecure.audit.jaas.Client.option.serviceName\": \"solr\",\n") + "            \"xasecure.audit.jaas.Client.loginModuleName\": \"com.sun.security.auth.module.Krb5LoginModule\",\n") + "            \"xasecure.audit.jaas.Client.option.useKeyTab\": \"true\",\n") + "            \"xasecure.audit.jaas.Client.option.storeKey\": \"false\",\n") + "            \"xasecure.audit.destination.solr.force.use.inmemory.jaas.config\": \"true\"\n") + "          }\n") + "        },\n") + "        {\n") + "          \"application-properties\": {\n") + "            \"atlas.kafka.security.protocol\": \"PLAINTEXTSASL\",\n") + "            \"atlas.jaas.KafkaClient.option.storeKey\": \"true\",\n") + "            \"atlas.solr.kerberos.enable\": \"true\",\n") + "            \"atlas.jaas.KafkaClient.loginModuleControlFlag\": \"required\",\n") + "            \"atlas.authentication.method.kerberos\": \"true\",\n") + "            \"atlas.jaas.KafkaClient.option.useKeyTab\": \"true\",\n") + "            \"atlas.kafka.sasl.kerberos.service.name\": \"${kafka-env/kafka_user}\",\n") + "            \"atlas.jaas.KafkaClient.loginModuleName\": \"com.sun.security.auth.module.Krb5LoginModule\",\n") + "            \"atlas.jaas.KafkaClient.option.serviceName\": \"${kafka-env/kafka_user}\"\n") + "          }\n") + "        }\n") + "      ],\n") + "      \"name\": \"ATLAS\"\n") + "    },\n") + "    {\n") + "      \"components\": [\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.secondary.namenode.kerberos.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"nn/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"secondary_namenode_nn\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/nn.service.keytab\",\n") + "                \"configuration\": \"hdfs-site/dfs.secondary.namenode.keytab.file\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.secondary.namenode.kerberos.internal.spnego.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": null\n") + "              },\n") + "              \"name\": \"/spnego\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"SECONDARY_NAMENODE\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"name\": \"/HDFS/NAMENODE/hdfs\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"HDFS_CLIENT\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.datanode.kerberos.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"dn/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"datanode_dn\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/dn.service.keytab\",\n") + "                \"configuration\": \"hdfs-site/dfs.datanode.keytab.file\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"configurations\": [\n") + "            {\n") + "              \"hdfs-site\": {\n") + "                \"dfs.datanode.address\": \"0.0.0.0:1019\",\n") + "                \"dfs.datanode.http.address\": \"0.0.0.0:1022\"\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"name\": \"DATANODE\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/nfs.kerberos.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"nfs/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"nfsgateway\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/nfs.service.keytab\",\n") + "                \"configuration\": \"hdfs-site/nfs.keytab.file\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"name\": \"NFS_GATEWAY\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.journalnode.kerberos.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"jn/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"journalnode_jn\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/jn.service.keytab\",\n") + "                \"configuration\": \"hdfs-site/dfs.journalnode.keytab.file\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.journalnode.kerberos.internal.spnego.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": null\n") + "              },\n") + "              \"name\": \"/spnego\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"JOURNALNODE\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hadoop-env/hdfs_principal_name\",\n") + "                \"type\": \"user\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"${hadoop-env/hdfs_user}${principal_suffix}@${realm}\"\n") + "              },\n") + "              \"name\": \"hdfs\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/hdfs.headless.keytab\",\n") + "                \"configuration\": \"hadoop-env/hdfs_user_keytab\",\n") + "                \"group\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.namenode.kerberos.principal\",\n") + "                \"type\": \"service\",\n") + "                \"local_username\": \"${hadoop-env/hdfs_user}\",\n") + "                \"value\": \"nn/_HOST@${realm}\"\n") + "              },\n") + "              \"name\": \"namenode_nn\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": \"r\",\n") + "                  \"name\": \"${hadoop-env/hdfs_user}\"\n") + "                },\n") + "                \"file\": \"${keytab_dir}/nn.service.keytab\",\n") + "                \"configuration\": \"hdfs-site/dfs.namenode.keytab.file\",\n") + "                \"group\": {\n") + "                  \"access\": \"\",\n") + "                  \"name\": \"${cluster-env/user_group}\"\n") + "                }\n") + "              }\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"hdfs-site/dfs.namenode.kerberos.internal.spnego.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": null\n") + "              },\n") + "              \"name\": \"/spnego\"\n") + "            },\n") + "            {\n") + "              \"principal\": {\n") + "                \"configuration\": \"ranger-hdfs-audit/xasecure.audit.jaas.Client.option.principal\",\n") + "                \"type\": null,\n") + "                \"local_username\": null,\n") + "                \"value\": null\n") + "              },\n") + "              \"name\": \"/HDFS/NAMENODE/namenode_nn\",\n") + "              \"keytab\": {\n") + "                \"owner\": {\n") + "                  \"access\": null,\n") + "                  \"name\": null\n") + "                },\n") + "                \"file\": null,\n") + "                \"configuration\": \"ranger-hdfs-audit/xasecure.audit.jaas.Client.option.keyTab\",\n") + "                \"group\": {\n") + "                  \"access\": null,\n") + "                  \"name\": null\n") + "                }\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"configurations\": [\n") + "            {\n") + "              \"hdfs-site\": {\n") + "                \"dfs.block.access.token.enable\": \"true\"\n") + "              }\n") + "            }\n") + "          ],\n") + "          \"name\": \"NAMENODE\"\n") + "        }\n") + "      ],\n") + "      \"identities\": [\n") + "        {\n") + "          \"principal\": {\n") + "            \"configuration\": \"hdfs-site/dfs.web.authentication.kerberos.principal\",\n") + "            \"type\": null,\n") + "            \"local_username\": null,\n") + "            \"value\": null\n") + "          },\n") + "          \"name\": \"/spnego\",\n") + "          \"keytab\": {\n") + "            \"owner\": {\n") + "              \"access\": null,\n") + "              \"name\": null\n") + "            },\n") + "            \"file\": null,\n") + "            \"configuration\": \"hdfs-site/dfs.web.authentication.kerberos.keytab\",\n") + "            \"group\": {\n") + "              \"access\": null,\n") + "              \"name\": null\n") + "            }\n") + "          }\n") + "        },\n") + "        {\n") + "          \"name\": \"/smokeuser\"\n") + "        }\n") + "      ],\n") + "      \"auth_to_local_properties\": [\n") + "        \"core-site/hadoop.security.auth_to_local\"\n") + "      ],\n") + "      \"configurations\": [\n") + "        {\n") + "          \"ranger-hdfs-audit\": {\n") + "            \"xasecure.audit.jaas.Client.loginModuleControlFlag\": \"required\",\n") + "            \"xasecure.audit.jaas.Client.option.serviceName\": \"solr\",\n") + "            \"xasecure.audit.jaas.Client.loginModuleName\": \"com.sun.security.auth.module.Krb5LoginModule\",\n") + "            \"xasecure.audit.jaas.Client.option.useKeyTab\": \"true\",\n") + "            \"xasecure.audit.jaas.Client.option.storeKey\": \"false\",\n") + "            \"xasecure.audit.destination.solr.force.use.inmemory.jaas.config\": \"true\"\n") + "          }\n") + "        },\n") + "        {\n") + "          \"core-site\": {\n") + "            \"hadoop.security.authorization\": \"true\",\n") + "            \"hadoop.security.authentication\": \"kerberos\",\n") + "            \"hadoop.proxyuser.HTTP.groups\": \"${hadoop-env/proxyuser_group}\"\n") + "          }\n") + "        }\n") + "      ],\n") + "      \"name\": \"HDFS\"\n") + "    },\n") + "    {\n") + "      \"components\": [\n") + "        {\n") + "          \"name\": \"NEW_SERVICE_CLIENT\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"name\": \"/HDFS/NAMENODE/hdfs\"\n") + "            },\n") + "            {\n") + "              \"name\": \"/HIVE/HIVE_SERVER/hive_server_hive\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"NEW_SERVICE_FOO_BAR\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"name\": \"/HDFS/NAMENODE/hdfs\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"NEW_SERVICE_SERVER\"\n") + "        }\n") + "      ],\n") + "      \"identities\": [\n") + "        {\n") + "          \"name\": \"/smokeuser\"\n") + "        }\n") + "      ],\n") + "      \"name\": \"NEW_SERVICE\"\n") + "    },\n") + "    {\n") + "      \"components\": [\n") + "        {\n") + "          \"name\": \"EXISTING_SERVICE_CLIENT\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"name\": \"/HDFS/NAMENODE/hdfs\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"EXISTING_SERVICE_SERVER\"\n") + "        },\n") + "        {\n") + "          \"identities\": [\n") + "            {\n") + "              \"name\": \"/HDFS/NAMENODE/hdfs\"\n") + "            }\n") + "          ],\n") + "          \"name\": \"EXISTING_SERVICE_NEW_SERVER\"\n") + "        }\n") + "      ],\n") + "      \"identities\": [\n") + "        {\n") + "          \"name\": \"/smokeuser\"\n") + "        },\n") + "        {\n") + "          \"name\": \"/HIVE/HIVE_SERVER/hive_server_hive\"\n") + "        }\n") + "      ],\n") + "      \"name\": \"EXISTING_SERVICE\"\n") + "    }\n") + "  ]\n") + "}\n")).toMap()), org.apache.ambari.server.state.kerberos.KerberosDescriptorUpdateHelperTest.GSON.toJson(newValue.toMap()));
    }
}